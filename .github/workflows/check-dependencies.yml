# Checks whether any Maven dependencies have been updated remotely, and if so, initiates a new build

name: Check for dependency updates

on:

#  schedule:
#    - cron: '*/30 * * * *'

  repository_dispatch:
    types: ['check-dependencies']

jobs:
  check-dependencies:
    runs-on: ubuntu-latest

    steps:

      # Check out the code
    - uses: actions/checkout@v2

      # Caching is not supported for all triggers, so we commit back to project
    - name: Ensure previous version hash file exists
      run: touch .ci-dependencies.yml

      # Set up Java 1.8 with Maven.  See https://github.com/actions/setup-java
    - name: Set up JDK 1.8 and Maven settings file
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

      # Execute the Maven command to build a hash of the current dependencies, forcing an update of snapshots
    - name: Maven Hash Dependencies
      run: mvn generate-resources --file pom.xml

      # Compare against the latest version to determine if there are new dependencies found
    - name: Compare current hash to previous
      run:  |
            echo "***** Current Output Hash *****"
            cat target/versions.yml
            echo "***** Previous Output Hash *****"
            cat .ci-dependencies.yml
            cmp -s .ci-dependencies.yml .target/versions.yml && echo 'Dependencies Match' || echo 'Dependencies Differ'

      # Next steps will be to issue a commit back if versions differ, using personal key, to kick off snapshot build
